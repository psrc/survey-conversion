index,table ,filter,result_col,result_value,description
1,trip,:,person_id,trip['person_dim_id'],
2,trip,:,trexpfac,trip['trip_weight_2017_2019_v2021'],
3,trip,:,mode,trip['mode_1'].map(mode_dict),
4,trip,(trip['travelers_total'] == 1) & (trip['mode'] == 'Auto'),mode,"""DRIVEALONEFREE""",
5,trip,(trip['travelers_total'] == 2) & (trip['mode'] == 'Auto'),mode,"""SHARED2FREE""",
6,trip,(trip['travelers_total'] > 2) & (trip['mode'] == 'Auto'),mode,"""SHARED3FREE""",
7,trip,"(trip['mode'] == 'Transit') & (trip['mode_1'] ==""Ferry or water taxi"")",mode,"""WALK_FRY""",
8,trip,"(trip['mode'] == 'Transit') & (trip['mode_1'] ==""Commuter rail (Sounder, Amtrak)"")",mode,"""WALK_COM""",
9,trip,"(trip['mode'] == 'Transit') & (trip['mode_1'].isin([""Urban Rail (e.g., Link light rail, monorail)"",""Other rail (e.g., streetcar)""]))",mode,"""WALK_LR""",
10,trip,"(trip['mode'] == 'Transit') & (trip['mode_1'] ==""Bus (public transit)"")",mode,"""WALK_LOC""",
11,trip,:,purpose,trip['dest_purpose'].map(full_purpose_map),
12,trip,:,origin_parcel_dim_id,trip['origin_parcel_dim_id'].fillna(-1),
13,trip,:,dest_parcel_dim_id,trip['dest_parcel_dim_id'].fillna(-1),
14,trip,:,depart_time_hhmm,trip['depart_time_hhmm'].fillna(-1),
15,trip,:,mam,trip['depart_time_hhmm'].apply(lambda x: convert_hhmm_to_mam(x)),
16,trip,:,depart,np.floor(trip['mam']/60),
